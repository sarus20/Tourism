{"version":3,"sources":["components/navbar.js","components/home.js","data/temples.js","components/temple.js","components/temples.js","components/templescontainer.js","data/places.js","components/place.js","components/places.js","components/placescontainer.js","data/foods.js","components/food.js","components/foods.js","components/foodscontainer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","className","to","title","exact","Home","TempleList","name","img_src","url","Description","Temple","class","style","backgroundImage","image","description","Temples","bestTemples","map","temple","TempleContainer","templeUrl","path","render","PlaceList","Place","Places","bestPlaces","place","PlaceContainer","placeUrl","FoodList","Food","Foods","bestFoods","FoodsList","food","FoodContainer","foodUrl","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c031002.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavBar=(props)=>(\r\n\r\n    <nav>\r\n        <h2><NavLink className=\"logo-link\" to=\"#\">{props.title}</NavLink></h2>\r\n                <ul className=\"nav-menu\">\r\n                <li><NavLink className=\"nav-menu-link\" exact to=\"/\">Home</NavLink></li>\r\n                <li><NavLink className=\"nav-menu-link\"  to=\"/places\">Places</NavLink></li>\r\n                <li><NavLink className=\"nav-menu-link\" to=\"/temples\">Temples</NavLink></li>\r\n                <li><NavLink className=\"nav-menu-link\" to=\"/foods\">Foods</NavLink></li>\r\n                </ul>\r\n    </nav>\r\n\r\n\r\n)\r\n\r\nexport default NavBar;\r\n\r\n//activeClassName =\"active\" -custom active link","import React from 'react';\r\n\r\nconst Home=(props)=>(\r\n\r\n    <div className=\"main-content\">\r\n\r\n    <div className=\"container\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"home-image\"></div>\r\n                <div className=\"thumbnail-container\">\r\n                    <div className=\"home-thumbnail-1\"></div>\r\n                    <div className=\"home-thumbnail-2\"></div>\r\n                    <div className=\"home-thumbnail-3\"></div>\r\n                    <div className=\"home-thumbnail-4\"></div>\r\n                </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    </div>\r\n\r\n);\r\n\r\nexport default Home;","export const TempleList =[\r\n    {\r\n        name: \"Golden Temple, Amritsar\",\r\n        img_src:\"https://assets.seniority.in/media/wysiwyg/golden_temple.jpg\",\r\n        url:\"Golden Temple, Amritsar\",\r\n        Description :\"Also known as Harmandir Sahib, this gorgeous temple is the holiest place of worship for the Sikh religion, and one of the most famous temples in North India. Built in the mid-15th century on the banks of a man-made lake in Amritsar, this temple’s golden facade and religious significance are a huge draw, and see devotees and tourists alike, arrive at its doors throughout the year in significant numbers.\"\r\n    },\r\n    {\r\n        name: \"Tirupathi Balaji, Tirumala\",\r\n        img_src:\"https://assets.seniority.in/media/wysiwyg/Tirupathi_Balaji.jpg\",\r\n        url:\"Tirupathi Balaji, Tirumala\",\r\n        Description :\"Officially known as the Venkateshwara Temple, this hill-top temple is dedicated to Lord Venkateshwara, who is a manifestation of Lord Vishnu. This temple, along with its beautiful infrastructure, also has the distinction of being the richest Hindu temple in the world.\"\r\n    },\r\n    {\r\n        name: \"Meenakshi Temple, Madurai\",\r\n        img_src:\"https://www.nationalgeographic.com/content/dam/travel/2017-digital/meenakshi-amman-temple/meenakshi-amman-temple-india.jpg\",\r\n        url:\"Meenakshi Temple, Madurai\",\r\n        Description :\"The Meenakshi Temple took its current, grandiose form in the 12-13th century, but it has been a place of worship for much longer than that. Located in the heart of Madurai, this sprawling temple is dedicated to Goddess Meenakshi (an incarnation of Parvati). Its wide hallways are always packed with devotees, and the three-storey gopuram or entrance tower over its gate is exceptionally iconic.\"\r\n    },\r\n    {\r\n        name: \"Brihadeeshvara Temple, Thanjavur\",\r\n        img_src:\"https://assets.seniority.in/media/wysiwyg/Brihadeeshvara_Temple_Thanjavur.jpg\",\r\n        url:\"Brihadeeshvara Temple, Thanjavur\",\r\n        Description :\"Another temple that’s located in the south India state of Tamil Nadu, Brihadeeshvara is an icon of the Chola Dynasty. This temple is ancient too, built way back in the period spanning 1003-1010 AD. You will also find one of the largest Shiva lingas in India within this temple.\"\r\n    },\r\n    {\r\n        name: \"Somnath Temple, Saurashtra\",\r\n        img_src:\"https://assets.seniority.in/media/wysiwyg/Somnath_Temple_Saurashtra_1.jpg\",\r\n        url:\"Somnath Temple, Saurashtra\",\r\n        Description :\"Another temple found in Gujarat, Somnath is an ancient place of worship. So much so that historians have been unable to trace how long ago the first temple was established at this site. The temple has been destroyed and re-built a few times in its history, with the latest iteration being put in place in 1951 and has become one of the most famous Hindu temples in India since.\"\r\n    },\r\n    {\r\n        name: \"Konark Sun Temple, Konark\",\r\n        img_src:\"https://assets.seniority.in/media/wysiwyg/Konark_Sun_Temple_Konark.jpg\",\r\n        url:\"Konark Sun Temple, Konark\",\r\n        Description :\"This legendary temple favours Surya, the sun god, and hosts the famous Chandrabhaga festival in February every year. A good 100 feet tall, this temple was built to look like a chariot back in the year 1250. Though it has suffered some damage and deterioration, it is still a magnificent structure to visit.\"\r\n    },\r\n     \r\n\r\n];\r\nexport default TempleList;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Temple=(props)=>{\r\n\r\n\r\n\r\n\r\n    return(\r\n    <div className=\"main-content\">\r\n        <Link to=\"/temples\" className=\"back\">Back</Link>\r\n    <h2>{props.title}</h2>\r\n    <div className=\"container\">\r\n             <div class =\"image-profile\" style={{ backgroundImage: \"url(\" + props.image +\")\" }}></div>\r\n     <h2> {props.name}</h2>\r\n    <p>{props.description} </p>\r\n    </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Temple;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport TempleList from '../data/temples';\r\n\r\nconst Temples=(props)=>{\r\n\r\n    let bestTemples =TempleList.map((temple)=>{\r\n        return (\r\n            <div className=\"temple-container\">\r\n              <Link to={`/temples/${temple.url}`}>\r\n\r\n                  <div className=\"temple-image\" style={{ backgroundImage: \"url(\" + temple.img_src +\")\" }}> </div>\r\n              </Link>\r\n        <h3>{temple.name}</h3>\r\n            </div>\r\n\r\n        );\r\n    });\r\n\r\nreturn(\r\n    <div className=\"main-content\">\r\n <Link to=\"/\" className=\"back\">Back</Link>\r\n    <h2>{props.title}</h2>\r\n    <div className=\"container\">\r\n        {bestTemples}\r\n       \r\n\r\n    </div>\r\n\r\n\r\n    </div>\r\n\r\n );\r\n};\r\n\r\n\r\nexport default Temples;\r\n\r\n\r\n","import React from 'react';\r\nimport TempleList from '../data/temples';\r\nimport Temple from './temple';\r\nimport Temples from './temples';\r\nimport {Route} from 'react-router-dom';\r\n\r\nconst TempleContainer =(props)=>{\r\n\r\n    let templeUrl =TempleList.map((temple) =>{\r\n\r\n        return (\r\n            <Route path ={`/temples/${temple.url}`} render = {()=> <Temple image={temple.img_src} name={temple.name} description={temple.Description} />} />\r\n                  \r\n        );\r\n\r\n    });\r\n       return  (\r\n           <div>\r\n               <Route exact path = '/temples' render ={()=> <Temples/>} />\r\n               {templeUrl}\r\n           </div>\r\n       )\r\n\r\n  \r\n    \r\n};\r\nexport default TempleContainer;","export const PlaceList =[\r\n    {\r\n        name: \"Kerala\",\r\n        img_src:\"https://static2.tripoto.com/media/filter/nl/img/1/TripDocument/1481193379_ikjkj.jpg\",\r\n        url :\"Kerala\",\r\n        Description:\"June marks an unofficial beginning to monsoon in Kerala. The lush green hills of Munnar and the backwaters of Alleppey are greeted with slight drizzles and drench the city with a romantic hue. The magnificence of Kerala lies in its plurality, from tea plantations to wild life reserves, house boats to luxury villas; a trip to God’s Own Country is inevitable on the list of tourist places in India to visit in June\"\r\n    },\r\n    {\r\n        name: \"Kufri\",\r\n        img_src:\"https://static2.tripoto.com/media/filter/nl/img/1/SpotDocument/1497357469_1497357438_16522377256_9cd36cc739_o.jpg\",\r\n        url:\"Kufri\",\r\n        Description:\"Kufri is your one-stop destination in India for all things skiing related. With its magnificent slopes that are perfect for the needs of first time skiers and the proficient ones, the Kufri Ski resort is the place to be this June. The resort also provides crash courses on skiing, that are done in collaboration with various adventure companies. The magnificent Himalayan National Park located here with its rare species of animals like the Tahr, Brown Bear and the enigmatic Snow Leopard is a must visit also.\"\r\n    },\r\n    {\r\n        name: \"Meghalaya\",\r\n        img_src:\"https://static2.tripoto.com/media/filter/nl/img/1/SpotDocument/1497421103_1497421074_5033381451_a1d890e06d_o.jpg\",\r\n        url:\"Meghalaya\",\r\n        Description:\"June marks the onset of rains in Meghalaya, which translates to the “abode of the clouds.” Meghalaya’s charms work best in monsoons, with fog and rain enhancing every nook and cranny of the state. Most of the state has been left unseen in tourism ads, travel manuals or even postcards which is what makes it exciting; you can discover someplace new, do something no one has ever done before\"\r\n    },\r\n    {\r\n        name: \"Munsiyari\",\r\n        img_src:\"https://static2.tripoto.com/media/filter/nl/img/1/SpotDocument/1497424243_1497424214_11728637444_abd59ed572_o.jpg\",\r\n        url:\"Munsiyari\",\r\n        Description:\"June marks the onset of rains in Meghalaya, which translates to the “abode of the clouds.” Meghalaya’s charms work best in monsoons, with fog and rain enhancing every nook and cranny of the state. Most of the state has been left unseen in tourism ads, travel manuals or even postcards which is what makes it exciting; you can discover someplace new, do something no one has ever done before\"\r\n    },\r\n    {\r\n        name: \"Kodaikanal\",\r\n        img_src:\"https://static2.tripoto.com/media/filter/nl/img/1/SpotDocument/1497360763_1497360754_20867016950_9a50796a01_o.jpg\",\r\n        url:\"Kodaikanal\",\r\n        Description:\"There are few sights in Southern India that are as pleasing and refreshing as the green panoramic hills of Kodaikanal. This charming hamlet is the proud keeper of hidden gems like the Berijam Lake. Also, the views of Byrant and the Chettiar parks are a must visit when in Kodaikanal.\"\r\n    },\r\n    {\r\n        name: \"Sonamarg\",\r\n        img_src:\"https://static2.tripoto.com/media/filter/nl/img/1/SpotDocument/1497423256_1497423234_4928808099_fc6e6d938a_o.jpg\",\r\n        url:\"Sonamarg\",\r\n        Description:\"Sonamarg or the Meadow of Gold, is a hill station situated on the banks of Nallah Sindh, towered over by the Himalayan peaks of Jammu and Kashmir. This alpine valley lying at an altitude of 2800 metres lies 87kms north-east of Srinagar and is very popular with tourists due to its endless stretches of grassy meadows and slopes dotted with villages and capped with fresh snow.\"\r\n    },\r\n     \r\n\r\n];\r\nexport default PlaceList;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Place=(props)=>{\r\n\r\n\r\n\r\n\r\n    return(\r\n    <div className=\"main-content\">\r\n        <Link to=\"/places\" className=\"back\">Back</Link>\r\n    <h2>{props.title}</h2>\r\n    <div className=\"container\">\r\n             <div class =\"image-profile\" style={{ backgroundImage: \"url(\" + props.image +\")\" }}></div>\r\n     <h2> {props.name}</h2>\r\n    <p>{props.description} </p>\r\n    </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Place;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PlaceList from '../data/places';\r\n\r\nconst Places=(props)=>{\r\n\r\n    let bestPlaces =PlaceList.map((place)=>{\r\n        return (\r\n            <div className=\"place-container\">\r\n              <Link to={`/places/${place.url}`}>\r\n                  <div className=\"place-image\" style={{ backgroundImage: \"url(\" + place.img_src +\")\" }}> </div>\r\n              </Link>\r\n        <h3>{place.name}</h3>\r\n            </div>\r\n\r\n        );\r\n    });\r\n\r\n    return(\r\n    <div className=\"main-content\">\r\n        <Link to=\"/\" className=\"back\">Back</Link>\r\n    <h2>{props.title}</h2>\r\n    <div className=\"container\">\r\n        {bestPlaces}\r\n    </div>\r\n\r\n\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Places;","import React from 'react';\r\nimport PlaceList from '../data/places';\r\nimport Place from './place';\r\nimport Places from './places';\r\nimport {Route} from 'react-router-dom';\r\n\r\nconst PlaceContainer =(props)=>{\r\n\r\n    let placeUrl =PlaceList.map((place) =>{\r\n\r\n        return (\r\n            <Route path ={`/places/${place.url}`} render = {()=> <Place image={place.img_src} name={place.name} description={place.Description} />} />\r\n                  \r\n        );\r\n\r\n    });\r\n       return  (\r\n           <div>\r\n               <Route exact path = '/places' render ={()=> <Places/>} />\r\n               {placeUrl}\r\n           </div>\r\n       )\r\n\r\n  \r\n    \r\n};\r\nexport default PlaceContainer;","export const FoodList =[\r\n    {\r\n        name: \"Dosai\",\r\n        img_src:\"https://www.visittnt.com/blog/wp-content/uploads/2016/07/dosa.jpg\",\r\n        url :\"Dosai\",\r\n        Description:\"They follow the most unique and traditional way of eating i.e. on Banana Leaves. Rice is their staple food and their dishes are the most healthy and full of nutrition and proteins which includes Kothu Parotta, Idli, Sambhar, Puttu, Appam, Idyappam, Murukku, Dosa. Chennai is a sure show stopper for every food lover\"\r\n    },\r\n    {\r\n        name: \"Briyani\",\r\n        img_src:\"https://files2.hungryforever.com/wp-content/uploads/2016/06/10140526/Chicken-Biryani-Recipe.jpg\",\r\n        url:\"Briyani\",\r\n        Description:\"This leather-tanning city in Tamil Nadu makes one of the most famous types of biryani, and the town has more biryani shops than any other city in the world. The meat and rice are cooked separately and then brought together, along with mint leaves and curd.\"\r\n    },\r\n    {\r\n        name: \"Chapathi\",\r\n        img_src:\"https://themayakitchen.com/wp-content/uploads/2019/06/CURRY.jpg\",\r\n        url:\"Chapathi\",\r\n        Description:\"Chapatis are made using a soft dough comprising wheat flour, salt and water. It is more finely ground than most western-style whole wheat flours. Traditionally, roti (and rice) are prepared without salt to provide a bland background for spiced dishes\"\r\n    },\r\n    {\r\n        name: \"Rasmalai \",\r\n        img_src:\"https://aromaticessence.co/wp-content/uploads/2018/05/49E95995-028D-44D2-9252-2CDA545120D8.jpeg\",\r\n        url:\"Rasmalai \",\r\n        Description:\"Ras malai or rossomalai is a dessert originating from the eastern regions of the Indian subcontinent, possibly Bengal. The name ras malai is the Hindi cognate of Bengali: rosh, meaning juice, and molai, meaning cream. It has been described as a rich cheesecake without a crust\"\r\n    },\r\n    {\r\n        name: \"Gulab jamun\",\r\n        img_src:\"https://www.indianhealthyrecipes.com/wp-content/uploads/2012/11/gulab-jamun-1-500x375.jpg\",\r\n        url:\"Gulab jamun\",\r\n        Description:\"Gulab jamun (or gulaab jamun) is among India's most popular desserts and it's often referred to as Indian doughnuts. This delicious treat consists of soft, melt-in-your-mouth, fried dumplings that are traditionally made of thickened or reduced milk and soaked in rose-flavored sugar syrup\"\r\n    },\r\n    {\r\n        name: \"Phirni\",\r\n        img_src:\"https://thumbs.dreamstime.com/z/punjabi-desserts-phirni-kheer-indian-milk-based-pudding-kesar-pista-basundi-also-known-as-phirni-north-india-also-137569029.jpg\",\r\n        url:\"Phirni\",\r\n        Description:\"Indian milk based pudding - kesar pista basundi.Also known as phirni in north India.It is also called basoondi in Gujarat.Bowl of milk based sweets.Kheer made with rice and milk and decorated with sliced pistachios,\"\r\n    },\r\n     \r\n\r\n];\r\nexport default FoodList;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Food=(props)=>{\r\n\r\n\r\n\r\n\r\n    return(\r\n    <div className=\"main-content\">\r\n        <Link to=\"/foods\" className=\"back\">Back</Link>\r\n    <h2>{props.title}</h2>\r\n    <div className=\"container\">\r\n             <div class =\"image-profile\" style={{ backgroundImage: \"url(\" + props.image +\")\" }}></div>\r\n     <h2> {props.name}</h2>\r\n    <p>{props.description} </p>\r\n    </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Food;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FoodsList from '../data/foods';\r\n\r\nconst Foods = (props) => {\r\n\r\n\r\n    let bestFoods = FoodsList.map((food) => {\r\n\r\n        return (\r\n            <div className=\"food-container\">\r\n                <Link to={`/foods/${food.url}`}>\r\n                    <div className=\"food-image\" style={{ backgroundImage: \"url(\" + food.img_src + \")\" }}> </div>\r\n                </Link>\r\n                <h3>{food.name}</h3>\r\n            </div>\r\n\r\n        );\r\n\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <Link to=\"/foods\" className=\"back\">Back</Link>\r\n            <h2>{props.title}</h2>\r\n            <div className=\"container\">\r\n                {bestFoods}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Foods;","import React from 'react';\r\nimport FoodList from '../data/foods';\r\nimport Food from './food';\r\nimport Foods from './foods';\r\nimport {Route} from 'react-router-dom';\r\n\r\nconst FoodContainer =(props)=>{\r\n\r\n    let foodUrl =FoodList.map((food) =>{\r\n\r\n        return (\r\n            <Route path ={`/foods/${food.url}`} render = {()=> <Food image={food.img_src} name={food.name} description={food.Description} />} />\r\n                  \r\n        );\r\n\r\n    });\r\n       return  (\r\n           <div>\r\n               <Route exact path = '/foods' render ={()=> <Foods/>} />\r\n               {foodUrl}\r\n           </div>\r\n       )\r\n\r\n  \r\n    \r\n};\r\nexport default FoodContainer;","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/navbar';\r\nimport Home from './components/home';\r\nimport TemplesContainer from './components/templescontainer';\r\nimport PlacesContainer from './components/placescontainer';\r\nimport FoodsContainer from './components/foodscontainer';\r\nimport {BrowserRouter,Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n\r\n       <NavBar title=\"India Tourism\"/>\r\n      { /*<Home title=\"Popular Places in India\"/>*/}\r\n      { /* <Route to =\"/\" component={Home}/>*/}\r\n      <Route exact path =\"/\" render={()=><Home title=\"Popular Places in India\"/>}/>\r\n      <Route path =\"/places\" render={()=><PlacesContainer title=\"Best Places in India\"/>}/>\r\n      <Route path =\"/temples\" render={()=><TemplesContainer title=\"Best Temples in India\"/>}/>\r\n      <Route path =\"/foods\" render={()=><FoodsContainer title=\"Best Temples in India\"/>}/>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}